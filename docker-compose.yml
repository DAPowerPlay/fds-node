version: "3"
services:
  geth:
    hostname: geth
    environment:
      - address=${ADDRESS} #derived from the private key which is passed in the args
    build:
      context: ./geth
      args:
        privatekey: ${PRIVATE_KEY}
        password: ${PASSWORD}
    restart: always     
    container_name: geth
    ports:
      - 127.0.0.1:8545:8545
      - 30303:30303
      - 30303:30303/udp       
    healthcheck:
      test: wget http://localhost:8545
      interval: 2s
      timeout: 5s
      retries: 30
    volumes:
     - geth-data:/root/.ethereum
    networks:
      chainnet:
        ipv4_address: 172.25.0.110

  swarm:
    hostname: swarm
    environment:
      - address=${ADDRESS} #derived from the private key which is passed in the args
    build:
      context: ./swarm
      args:
        privatekey: ${PRIVATE_KEY}
        password: ${PASSWORD}
    restart: always         
    container_name: swarm
    ports:
      - 127.0.0.1:8500:8500
      # - 127.0.0.1:30399:30399/udp
    volumes:
     - swarm-data:/root/.ethereum
    networks:
      chainnet:
        ipv4_address: 172.25.0.111

  nginx:
    hostname: nginx
    build:
      context: ./nginx
    restart: always       
    container_name: nginx    
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs-data:/etc/letsencrypt
      - certs-www:/var/www/certbot
    networks:
       chainnet:
          ipv4_address: 172.25.0.120

  certbot:
    hostname: certbot
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; echo \"Starting cert renew process\" ; while :; do echo \"Renewing certificate\" ; certbot renew; sleep 12h ; done;'"
    container_name: certbot
    volumes:
      - certs-data:/etc/letsencrypt
      - certs-www:/var/www/certbot
    networks:
       chainnet:
          ipv4_address: 172.25.0.121

networks:
  chainnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/24

volumes:
  geth-data:
  swarm-data:
  certs-data:
  certs-www: